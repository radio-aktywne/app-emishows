[tool.poetry]
name = "emishows"
version = "0.3.0"
description = "emission shows ðŸŽ­"
readme = "README.md"
authors = ["radio-aktywne <it@radioaktywne.pl>"]
classifiers = ["License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent"]
repository = "https://github.com/radio-aktywne/emishows"
documentation = "https://radio-aktywne.github.io/emishows"

[tool.poetry.dependencies]
python = "^3.10"
pydantic =  { version = "^1.10", extras = ["dotenv"] }
omegaconf = "^2.2"
typer = { version = "^0.6", extras = ["all"] }
djangorestframework = "^3.13"
Django = "~4.0.9"
psycopg2-binary = "^2.9"
django-cockroachdb = "~4.0.0"
django-filter = "^21.1"
django-probes = "^1.7"
caldav = "^0.8"
icalendar = "^4.0"
recurring-ical-events = { version = "^1.0", allow-prereleases = true }
tzdata = "*"
uvicorn = { version = "^0.17", extras = ["standard"] }
whitenoise = "^6.0"
httpx = "^0.23"

[tool.poetry.group.poe.dependencies]
poethepoet = "^0.16"

[tool.poetry.group.dev.dependencies]
black = "^22"

[tool.poetry.group.test.dependencies]
pytest = "^7"

[tool.poetry.group.docs.dependencies]
mkdocs-material = "^8"

[tool.poetry.scripts]
# cli entry point
emishows = "emishows.__main__:cli"
# manage
emishows-manage = "emishows.manage:main"

[tool.black]
line-length = 79
target-version = ['py310']
extend-exclude = '''
/(
  | src/emishows/app/migrations
)/
'''

[tool.poe]
verbosity = -1

[tool.poe.tasks.install]
help = "Install the package for local development in editable mode"
cmd = "poetry install --sync"

[tool.poe.tasks.update]
help = "Update the package dependencies"
cmd = "poetry update"

[tool.poe.tasks.format]
help = "Format the code"
cmd = "black ."

[tool.poe.tasks.lint]
help = "Lint the code"
cmd = "black . --check --diff"

[tool.poe.tasks.test]
help = "Run the tests"
cmd = "pytest"

[tool.poe.tasks.build-docs]
help = "Build the documentation"
cmd = "mkdocs build"
cwd = "docs"

[tool.poe.tasks.serve-docs]
help = "Serve the documentation"
cmd = "mkdocs serve"
cwd = "docs"

[tool.poe.tasks.docs]
help = "Build and serve the documentation"
ref = "serve-docs"
deps = ["build-docs"]

[tool.poe.tasks.clean]
help = "Clean the build artifacts"
cmd = "rm -rf build dist .eggs *.egg-info"

[tool.poe.tasks.build]
help = "Build the package"
cmd = "poetry build"

[tool.poe.tasks.run]
help = "Run the emishows package"
cmd = "emishows"

[tool.poe.tasks.build-docker]
help = "Build the docker image"
cmd = "docker build -t emishows .."

[tool.poe.tasks.run-docker]
help = "Run the emishows package in a docker container"
cmd = "docker run --rm -it emishows"

[tool.poe.tasks.docker]
help = "Build and run the docker image"
ref = "run-docker"
deps = ["build-docker"]

[tool.poe.tasks.build-docker-tests]
help = "Build the docker image for tests"
cmd = "docker build --target test -t emishows:test .."

[tool.poe.tasks.run-docker-tests]
help = "Run the tests in a docker container"
cmd = "docker run --rm -it emishows:test"

[tool.poe.tasks.docker-tests]
help = "Build and run the docker image for tests"
ref = "run-docker-tests"
deps = ["build-docker-tests"]

[tool.poe.tasks.manage]
help = "Run administrative tasks"
cmd = "emishows-manage"

[build-system]
# this should be there, see https://python-poetry.org/docs/pyproject/#poetry-and-pep-517
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
